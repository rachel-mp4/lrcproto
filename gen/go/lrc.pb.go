// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: lrc.proto

package lrcpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Event struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Msg:
	//
	//	*Event_Ping
	//	*Event_Pong
	//	*Event_Init
	//	*Event_Pub
	//	*Event_Insert
	//	*Event_Delete
	//	*Event_Mute
	//	*Event_Unmute
	//	*Event_Set
	//	*Event_Get
	//	*Event_Kick
	//	*Event_Hug
	//	*Event_Ban
	//	*Event_Unban
	Msg           isEvent_Msg `protobuf_oneof:"msg"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_lrc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_lrc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_lrc_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetMsg() isEvent_Msg {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *Event) GetPing() *Ping {
	if x != nil {
		if x, ok := x.Msg.(*Event_Ping); ok {
			return x.Ping
		}
	}
	return nil
}

func (x *Event) GetPong() *Pong {
	if x != nil {
		if x, ok := x.Msg.(*Event_Pong); ok {
			return x.Pong
		}
	}
	return nil
}

func (x *Event) GetInit() *Init {
	if x != nil {
		if x, ok := x.Msg.(*Event_Init); ok {
			return x.Init
		}
	}
	return nil
}

func (x *Event) GetPub() *Pub {
	if x != nil {
		if x, ok := x.Msg.(*Event_Pub); ok {
			return x.Pub
		}
	}
	return nil
}

func (x *Event) GetInsert() *Insert {
	if x != nil {
		if x, ok := x.Msg.(*Event_Insert); ok {
			return x.Insert
		}
	}
	return nil
}

func (x *Event) GetDelete() *Delete {
	if x != nil {
		if x, ok := x.Msg.(*Event_Delete); ok {
			return x.Delete
		}
	}
	return nil
}

func (x *Event) GetMute() *Mute {
	if x != nil {
		if x, ok := x.Msg.(*Event_Mute); ok {
			return x.Mute
		}
	}
	return nil
}

func (x *Event) GetUnmute() *Unmute {
	if x != nil {
		if x, ok := x.Msg.(*Event_Unmute); ok {
			return x.Unmute
		}
	}
	return nil
}

func (x *Event) GetSet() *Set {
	if x != nil {
		if x, ok := x.Msg.(*Event_Set); ok {
			return x.Set
		}
	}
	return nil
}

func (x *Event) GetGet() *Get {
	if x != nil {
		if x, ok := x.Msg.(*Event_Get); ok {
			return x.Get
		}
	}
	return nil
}

func (x *Event) GetKick() *Kick {
	if x != nil {
		if x, ok := x.Msg.(*Event_Kick); ok {
			return x.Kick
		}
	}
	return nil
}

func (x *Event) GetHug() *Hug {
	if x != nil {
		if x, ok := x.Msg.(*Event_Hug); ok {
			return x.Hug
		}
	}
	return nil
}

func (x *Event) GetBan() *Ban {
	if x != nil {
		if x, ok := x.Msg.(*Event_Ban); ok {
			return x.Ban
		}
	}
	return nil
}

func (x *Event) GetUnban() *Unban {
	if x != nil {
		if x, ok := x.Msg.(*Event_Unban); ok {
			return x.Unban
		}
	}
	return nil
}

type isEvent_Msg interface {
	isEvent_Msg()
}

type Event_Ping struct {
	Ping *Ping `protobuf:"bytes,1,opt,name=ping,proto3,oneof"`
}

type Event_Pong struct {
	Pong *Pong `protobuf:"bytes,2,opt,name=pong,proto3,oneof"`
}

type Event_Init struct {
	Init *Init `protobuf:"bytes,3,opt,name=init,proto3,oneof"`
}

type Event_Pub struct {
	Pub *Pub `protobuf:"bytes,4,opt,name=pub,proto3,oneof"`
}

type Event_Insert struct {
	Insert *Insert `protobuf:"bytes,5,opt,name=insert,proto3,oneof"`
}

type Event_Delete struct {
	Delete *Delete `protobuf:"bytes,6,opt,name=delete,proto3,oneof"`
}

type Event_Mute struct {
	Mute *Mute `protobuf:"bytes,7,opt,name=mute,proto3,oneof"`
}

type Event_Unmute struct {
	Unmute *Unmute `protobuf:"bytes,8,opt,name=unmute,proto3,oneof"`
}

type Event_Set struct {
	Set *Set `protobuf:"bytes,9,opt,name=set,proto3,oneof"`
}

type Event_Get struct {
	Get *Get `protobuf:"bytes,10,opt,name=get,proto3,oneof"`
}

type Event_Kick struct {
	Kick *Kick `protobuf:"bytes,11,opt,name=kick,proto3,oneof"`
}

type Event_Hug struct {
	Hug *Hug `protobuf:"bytes,12,opt,name=hug,proto3,oneof"`
}

type Event_Ban struct {
	Ban *Ban `protobuf:"bytes,13,opt,name=ban,proto3,oneof"`
}

type Event_Unban struct {
	Unban *Unban `protobuf:"bytes,14,opt,name=unban,proto3,oneof"`
}

func (*Event_Ping) isEvent_Msg() {}

func (*Event_Pong) isEvent_Msg() {}

func (*Event_Init) isEvent_Msg() {}

func (*Event_Pub) isEvent_Msg() {}

func (*Event_Insert) isEvent_Msg() {}

func (*Event_Delete) isEvent_Msg() {}

func (*Event_Mute) isEvent_Msg() {}

func (*Event_Unmute) isEvent_Msg() {}

func (*Event_Set) isEvent_Msg() {}

func (*Event_Get) isEvent_Msg() {}

func (*Event_Kick) isEvent_Msg() {}

func (*Event_Hug) isEvent_Msg() {}

func (*Event_Ban) isEvent_Msg() {}

func (*Event_Unban) isEvent_Msg() {}

type Ping struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ping) Reset() {
	*x = Ping{}
	mi := &file_lrc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ping) ProtoMessage() {}

func (x *Ping) ProtoReflect() protoreflect.Message {
	mi := &file_lrc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ping.ProtoReflect.Descriptor instead.
func (*Ping) Descriptor() ([]byte, []int) {
	return file_lrc_proto_rawDescGZIP(), []int{1}
}

type Pong struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pong) Reset() {
	*x = Pong{}
	mi := &file_lrc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pong) ProtoMessage() {}

func (x *Pong) ProtoReflect() protoreflect.Message {
	mi := &file_lrc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pong.ProtoReflect.Descriptor instead.
func (*Pong) Descriptor() ([]byte, []int) {
	return file_lrc_proto_rawDescGZIP(), []int{2}
}

type Init struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *uint32                `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	Nick          *string                `protobuf:"bytes,2,opt,name=nick,proto3,oneof" json:"nick,omitempty"`
	ExternalID    *string                `protobuf:"bytes,3,opt,name=externalID,proto3,oneof" json:"externalID,omitempty"`
	Color         *uint32                `protobuf:"varint,4,opt,name=color,proto3,oneof" json:"color,omitempty"`
	Echoed        *bool                  `protobuf:"varint,5,opt,name=echoed,proto3,oneof" json:"echoed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Init) Reset() {
	*x = Init{}
	mi := &file_lrc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Init) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Init) ProtoMessage() {}

func (x *Init) ProtoReflect() protoreflect.Message {
	mi := &file_lrc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Init.ProtoReflect.Descriptor instead.
func (*Init) Descriptor() ([]byte, []int) {
	return file_lrc_proto_rawDescGZIP(), []int{3}
}

func (x *Init) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Init) GetNick() string {
	if x != nil && x.Nick != nil {
		return *x.Nick
	}
	return ""
}

func (x *Init) GetExternalID() string {
	if x != nil && x.ExternalID != nil {
		return *x.ExternalID
	}
	return ""
}

func (x *Init) GetColor() uint32 {
	if x != nil && x.Color != nil {
		return *x.Color
	}
	return 0
}

func (x *Init) GetEchoed() bool {
	if x != nil && x.Echoed != nil {
		return *x.Echoed
	}
	return false
}

type Pub struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pub) Reset() {
	*x = Pub{}
	mi := &file_lrc_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pub) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pub) ProtoMessage() {}

func (x *Pub) ProtoReflect() protoreflect.Message {
	mi := &file_lrc_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pub.ProtoReflect.Descriptor instead.
func (*Pub) Descriptor() ([]byte, []int) {
	return file_lrc_proto_rawDescGZIP(), []int{4}
}

func (x *Pub) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Insert struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *uint32                `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	Body          string                 `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Utf16Index    uint32                 `protobuf:"varint,3,opt,name=utf16Index,proto3" json:"utf16Index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Insert) Reset() {
	*x = Insert{}
	mi := &file_lrc_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Insert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Insert) ProtoMessage() {}

func (x *Insert) ProtoReflect() protoreflect.Message {
	mi := &file_lrc_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Insert.ProtoReflect.Descriptor instead.
func (*Insert) Descriptor() ([]byte, []int) {
	return file_lrc_proto_rawDescGZIP(), []int{5}
}

func (x *Insert) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Insert) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Insert) GetUtf16Index() uint32 {
	if x != nil {
		return x.Utf16Index
	}
	return 0
}

type Delete struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *uint32                `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	Utf16Start    uint32                 `protobuf:"varint,2,opt,name=utf16Start,proto3" json:"utf16Start,omitempty"`
	Utf16End      uint32                 `protobuf:"varint,3,opt,name=utf16End,proto3" json:"utf16End,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Delete) Reset() {
	*x = Delete{}
	mi := &file_lrc_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Delete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Delete) ProtoMessage() {}

func (x *Delete) ProtoReflect() protoreflect.Message {
	mi := &file_lrc_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Delete.ProtoReflect.Descriptor instead.
func (*Delete) Descriptor() ([]byte, []int) {
	return file_lrc_proto_rawDescGZIP(), []int{6}
}

func (x *Delete) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Delete) GetUtf16Start() uint32 {
	if x != nil {
		return x.Utf16Start
	}
	return 0
}

func (x *Delete) GetUtf16End() uint32 {
	if x != nil {
		return x.Utf16End
	}
	return 0
}

type Mute struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Mute) Reset() {
	*x = Mute{}
	mi := &file_lrc_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Mute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mute) ProtoMessage() {}

func (x *Mute) ProtoReflect() protoreflect.Message {
	mi := &file_lrc_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mute.ProtoReflect.Descriptor instead.
func (*Mute) Descriptor() ([]byte, []int) {
	return file_lrc_proto_rawDescGZIP(), []int{7}
}

func (x *Mute) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Unmute struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Unmute) Reset() {
	*x = Unmute{}
	mi := &file_lrc_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Unmute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unmute) ProtoMessage() {}

func (x *Unmute) ProtoReflect() protoreflect.Message {
	mi := &file_lrc_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unmute.ProtoReflect.Descriptor instead.
func (*Unmute) Descriptor() ([]byte, []int) {
	return file_lrc_proto_rawDescGZIP(), []int{8}
}

func (x *Unmute) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Set struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nick          *string                `protobuf:"bytes,1,opt,name=nick,proto3,oneof" json:"nick,omitempty"`
	ExternalID    *string                `protobuf:"bytes,2,opt,name=externalID,proto3,oneof" json:"externalID,omitempty"`
	Color         *uint32                `protobuf:"varint,3,opt,name=color,proto3,oneof" json:"color,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Set) Reset() {
	*x = Set{}
	mi := &file_lrc_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Set) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Set) ProtoMessage() {}

func (x *Set) ProtoReflect() protoreflect.Message {
	mi := &file_lrc_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Set.ProtoReflect.Descriptor instead.
func (*Set) Descriptor() ([]byte, []int) {
	return file_lrc_proto_rawDescGZIP(), []int{9}
}

func (x *Set) GetNick() string {
	if x != nil && x.Nick != nil {
		return *x.Nick
	}
	return ""
}

func (x *Set) GetExternalID() string {
	if x != nil && x.ExternalID != nil {
		return *x.ExternalID
	}
	return ""
}

func (x *Set) GetColor() uint32 {
	if x != nil && x.Color != nil {
		return *x.Color
	}
	return 0
}

type Get struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         *string                `protobuf:"bytes,1,opt,name=topic,proto3,oneof" json:"topic,omitempty"`
	Connected     *uint32                `protobuf:"varint,2,opt,name=connected,proto3,oneof" json:"connected,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Get) Reset() {
	*x = Get{}
	mi := &file_lrc_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Get) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Get) ProtoMessage() {}

func (x *Get) ProtoReflect() protoreflect.Message {
	mi := &file_lrc_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Get.ProtoReflect.Descriptor instead.
func (*Get) Descriptor() ([]byte, []int) {
	return file_lrc_proto_rawDescGZIP(), []int{10}
}

func (x *Get) GetTopic() string {
	if x != nil && x.Topic != nil {
		return *x.Topic
	}
	return ""
}

func (x *Get) GetConnected() uint32 {
	if x != nil && x.Connected != nil {
		return *x.Connected
	}
	return 0
}

type Sudo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExternalID    string                 `protobuf:"bytes,1,opt,name=externalID,proto3" json:"externalID,omitempty"`
	Secret        string                 `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Sudo) Reset() {
	*x = Sudo{}
	mi := &file_lrc_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Sudo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sudo) ProtoMessage() {}

func (x *Sudo) ProtoReflect() protoreflect.Message {
	mi := &file_lrc_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sudo.ProtoReflect.Descriptor instead.
func (*Sudo) Descriptor() ([]byte, []int) {
	return file_lrc_proto_rawDescGZIP(), []int{11}
}

func (x *Sudo) GetExternalID() string {
	if x != nil {
		return x.ExternalID
	}
	return ""
}

func (x *Sudo) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type Kick struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Privileges    *Sudo                  `protobuf:"bytes,1,opt,name=privileges,proto3" json:"privileges,omitempty"`
	Id            uint32                 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Kick) Reset() {
	*x = Kick{}
	mi := &file_lrc_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Kick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Kick) ProtoMessage() {}

func (x *Kick) ProtoReflect() protoreflect.Message {
	mi := &file_lrc_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Kick.ProtoReflect.Descriptor instead.
func (*Kick) Descriptor() ([]byte, []int) {
	return file_lrc_proto_rawDescGZIP(), []int{12}
}

func (x *Kick) GetPrivileges() *Sudo {
	if x != nil {
		return x.Privileges
	}
	return nil
}

func (x *Kick) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Hug struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Hug) Reset() {
	*x = Hug{}
	mi := &file_lrc_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Hug) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hug) ProtoMessage() {}

func (x *Hug) ProtoReflect() protoreflect.Message {
	mi := &file_lrc_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hug.ProtoReflect.Descriptor instead.
func (*Hug) Descriptor() ([]byte, []int) {
	return file_lrc_proto_rawDescGZIP(), []int{13}
}

func (x *Hug) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Ban struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Privileges    *Sudo                  `protobuf:"bytes,1,opt,name=privileges,proto3" json:"privileges,omitempty"`
	Id            uint32                 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ban) Reset() {
	*x = Ban{}
	mi := &file_lrc_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ban) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ban) ProtoMessage() {}

func (x *Ban) ProtoReflect() protoreflect.Message {
	mi := &file_lrc_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ban.ProtoReflect.Descriptor instead.
func (*Ban) Descriptor() ([]byte, []int) {
	return file_lrc_proto_rawDescGZIP(), []int{14}
}

func (x *Ban) GetPrivileges() *Sudo {
	if x != nil {
		return x.Privileges
	}
	return nil
}

func (x *Ban) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Unban struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Privileges    *Sudo                  `protobuf:"bytes,1,opt,name=privileges,proto3" json:"privileges,omitempty"`
	Id            uint32                 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Unban) Reset() {
	*x = Unban{}
	mi := &file_lrc_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Unban) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unban) ProtoMessage() {}

func (x *Unban) ProtoReflect() protoreflect.Message {
	mi := &file_lrc_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unban.ProtoReflect.Descriptor instead.
func (*Unban) Descriptor() ([]byte, []int) {
	return file_lrc_proto_rawDescGZIP(), []int{15}
}

func (x *Unban) GetPrivileges() *Sudo {
	if x != nil {
		return x.Privileges
	}
	return nil
}

func (x *Unban) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_lrc_proto protoreflect.FileDescriptor

const file_lrc_proto_rawDesc = "" +
	"\n" +
	"\tlrc.proto\x12\x06lrc.v1\"\x8c\x04\n" +
	"\x05Event\x12\"\n" +
	"\x04ping\x18\x01 \x01(\v2\f.lrc.v1.PingH\x00R\x04ping\x12\"\n" +
	"\x04pong\x18\x02 \x01(\v2\f.lrc.v1.PongH\x00R\x04pong\x12\"\n" +
	"\x04init\x18\x03 \x01(\v2\f.lrc.v1.InitH\x00R\x04init\x12\x1f\n" +
	"\x03pub\x18\x04 \x01(\v2\v.lrc.v1.PubH\x00R\x03pub\x12(\n" +
	"\x06insert\x18\x05 \x01(\v2\x0e.lrc.v1.InsertH\x00R\x06insert\x12(\n" +
	"\x06delete\x18\x06 \x01(\v2\x0e.lrc.v1.DeleteH\x00R\x06delete\x12\"\n" +
	"\x04mute\x18\a \x01(\v2\f.lrc.v1.MuteH\x00R\x04mute\x12(\n" +
	"\x06unmute\x18\b \x01(\v2\x0e.lrc.v1.UnmuteH\x00R\x06unmute\x12\x1f\n" +
	"\x03set\x18\t \x01(\v2\v.lrc.v1.SetH\x00R\x03set\x12\x1f\n" +
	"\x03get\x18\n" +
	" \x01(\v2\v.lrc.v1.GetH\x00R\x03get\x12\"\n" +
	"\x04kick\x18\v \x01(\v2\f.lrc.v1.KickH\x00R\x04kick\x12\x1f\n" +
	"\x03hug\x18\f \x01(\v2\v.lrc.v1.HugH\x00R\x03hug\x12\x1f\n" +
	"\x03ban\x18\r \x01(\v2\v.lrc.v1.BanH\x00R\x03ban\x12%\n" +
	"\x05unban\x18\x0e \x01(\v2\r.lrc.v1.UnbanH\x00R\x05unbanB\x05\n" +
	"\x03msg\"\x06\n" +
	"\x04Ping\"\x06\n" +
	"\x04Pong\"\xc5\x01\n" +
	"\x04Init\x12\x13\n" +
	"\x02id\x18\x01 \x01(\rH\x00R\x02id\x88\x01\x01\x12\x17\n" +
	"\x04nick\x18\x02 \x01(\tH\x01R\x04nick\x88\x01\x01\x12#\n" +
	"\n" +
	"externalID\x18\x03 \x01(\tH\x02R\n" +
	"externalID\x88\x01\x01\x12\x19\n" +
	"\x05color\x18\x04 \x01(\rH\x03R\x05color\x88\x01\x01\x12\x1b\n" +
	"\x06echoed\x18\x05 \x01(\bH\x04R\x06echoed\x88\x01\x01B\x05\n" +
	"\x03_idB\a\n" +
	"\x05_nickB\r\n" +
	"\v_externalIDB\b\n" +
	"\x06_colorB\t\n" +
	"\a_echoed\"\x15\n" +
	"\x03Pub\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\"X\n" +
	"\x06Insert\x12\x13\n" +
	"\x02id\x18\x01 \x01(\rH\x00R\x02id\x88\x01\x01\x12\x12\n" +
	"\x04body\x18\x02 \x01(\tR\x04body\x12\x1e\n" +
	"\n" +
	"utf16Index\x18\x03 \x01(\rR\n" +
	"utf16IndexB\x05\n" +
	"\x03_id\"`\n" +
	"\x06Delete\x12\x13\n" +
	"\x02id\x18\x01 \x01(\rH\x00R\x02id\x88\x01\x01\x12\x1e\n" +
	"\n" +
	"utf16Start\x18\x02 \x01(\rR\n" +
	"utf16Start\x12\x1a\n" +
	"\butf16End\x18\x03 \x01(\rR\butf16EndB\x05\n" +
	"\x03_id\"\x16\n" +
	"\x04Mute\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\"\x18\n" +
	"\x06Unmute\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\"\x80\x01\n" +
	"\x03Set\x12\x17\n" +
	"\x04nick\x18\x01 \x01(\tH\x00R\x04nick\x88\x01\x01\x12#\n" +
	"\n" +
	"externalID\x18\x02 \x01(\tH\x01R\n" +
	"externalID\x88\x01\x01\x12\x19\n" +
	"\x05color\x18\x03 \x01(\rH\x02R\x05color\x88\x01\x01B\a\n" +
	"\x05_nickB\r\n" +
	"\v_externalIDB\b\n" +
	"\x06_color\"[\n" +
	"\x03Get\x12\x19\n" +
	"\x05topic\x18\x01 \x01(\tH\x00R\x05topic\x88\x01\x01\x12!\n" +
	"\tconnected\x18\x02 \x01(\rH\x01R\tconnected\x88\x01\x01B\b\n" +
	"\x06_topicB\f\n" +
	"\n" +
	"_connected\">\n" +
	"\x04Sudo\x12\x1e\n" +
	"\n" +
	"externalID\x18\x01 \x01(\tR\n" +
	"externalID\x12\x16\n" +
	"\x06secret\x18\x02 \x01(\tR\x06secret\"D\n" +
	"\x04Kick\x12,\n" +
	"\n" +
	"privileges\x18\x01 \x01(\v2\f.lrc.v1.SudoR\n" +
	"privileges\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\rR\x02id\"\x15\n" +
	"\x03Hug\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\"C\n" +
	"\x03Ban\x12,\n" +
	"\n" +
	"privileges\x18\x01 \x01(\v2\f.lrc.v1.SudoR\n" +
	"privileges\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\rR\x02id\"E\n" +
	"\x05Unban\x12,\n" +
	"\n" +
	"privileges\x18\x01 \x01(\v2\f.lrc.v1.SudoR\n" +
	"privileges\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\rR\x02idB3Z1github.com/rachel-mp4/lrcproto/gen/go/lrcpb;lrcpbb\x06proto3"

var (
	file_lrc_proto_rawDescOnce sync.Once
	file_lrc_proto_rawDescData []byte
)

func file_lrc_proto_rawDescGZIP() []byte {
	file_lrc_proto_rawDescOnce.Do(func() {
		file_lrc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_lrc_proto_rawDesc), len(file_lrc_proto_rawDesc)))
	})
	return file_lrc_proto_rawDescData
}

var file_lrc_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_lrc_proto_goTypes = []any{
	(*Event)(nil),  // 0: lrc.v1.Event
	(*Ping)(nil),   // 1: lrc.v1.Ping
	(*Pong)(nil),   // 2: lrc.v1.Pong
	(*Init)(nil),   // 3: lrc.v1.Init
	(*Pub)(nil),    // 4: lrc.v1.Pub
	(*Insert)(nil), // 5: lrc.v1.Insert
	(*Delete)(nil), // 6: lrc.v1.Delete
	(*Mute)(nil),   // 7: lrc.v1.Mute
	(*Unmute)(nil), // 8: lrc.v1.Unmute
	(*Set)(nil),    // 9: lrc.v1.Set
	(*Get)(nil),    // 10: lrc.v1.Get
	(*Sudo)(nil),   // 11: lrc.v1.Sudo
	(*Kick)(nil),   // 12: lrc.v1.Kick
	(*Hug)(nil),    // 13: lrc.v1.Hug
	(*Ban)(nil),    // 14: lrc.v1.Ban
	(*Unban)(nil),  // 15: lrc.v1.Unban
}
var file_lrc_proto_depIdxs = []int32{
	1,  // 0: lrc.v1.Event.ping:type_name -> lrc.v1.Ping
	2,  // 1: lrc.v1.Event.pong:type_name -> lrc.v1.Pong
	3,  // 2: lrc.v1.Event.init:type_name -> lrc.v1.Init
	4,  // 3: lrc.v1.Event.pub:type_name -> lrc.v1.Pub
	5,  // 4: lrc.v1.Event.insert:type_name -> lrc.v1.Insert
	6,  // 5: lrc.v1.Event.delete:type_name -> lrc.v1.Delete
	7,  // 6: lrc.v1.Event.mute:type_name -> lrc.v1.Mute
	8,  // 7: lrc.v1.Event.unmute:type_name -> lrc.v1.Unmute
	9,  // 8: lrc.v1.Event.set:type_name -> lrc.v1.Set
	10, // 9: lrc.v1.Event.get:type_name -> lrc.v1.Get
	12, // 10: lrc.v1.Event.kick:type_name -> lrc.v1.Kick
	13, // 11: lrc.v1.Event.hug:type_name -> lrc.v1.Hug
	14, // 12: lrc.v1.Event.ban:type_name -> lrc.v1.Ban
	15, // 13: lrc.v1.Event.unban:type_name -> lrc.v1.Unban
	11, // 14: lrc.v1.Kick.privileges:type_name -> lrc.v1.Sudo
	11, // 15: lrc.v1.Ban.privileges:type_name -> lrc.v1.Sudo
	11, // 16: lrc.v1.Unban.privileges:type_name -> lrc.v1.Sudo
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_lrc_proto_init() }
func file_lrc_proto_init() {
	if File_lrc_proto != nil {
		return
	}
	file_lrc_proto_msgTypes[0].OneofWrappers = []any{
		(*Event_Ping)(nil),
		(*Event_Pong)(nil),
		(*Event_Init)(nil),
		(*Event_Pub)(nil),
		(*Event_Insert)(nil),
		(*Event_Delete)(nil),
		(*Event_Mute)(nil),
		(*Event_Unmute)(nil),
		(*Event_Set)(nil),
		(*Event_Get)(nil),
		(*Event_Kick)(nil),
		(*Event_Hug)(nil),
		(*Event_Ban)(nil),
		(*Event_Unban)(nil),
	}
	file_lrc_proto_msgTypes[3].OneofWrappers = []any{}
	file_lrc_proto_msgTypes[5].OneofWrappers = []any{}
	file_lrc_proto_msgTypes[6].OneofWrappers = []any{}
	file_lrc_proto_msgTypes[9].OneofWrappers = []any{}
	file_lrc_proto_msgTypes[10].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_lrc_proto_rawDesc), len(file_lrc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_lrc_proto_goTypes,
		DependencyIndexes: file_lrc_proto_depIdxs,
		MessageInfos:      file_lrc_proto_msgTypes,
	}.Build()
	File_lrc_proto = out.File
	file_lrc_proto_goTypes = nil
	file_lrc_proto_depIdxs = nil
}
